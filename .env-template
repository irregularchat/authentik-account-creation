#.env-template
# Customization
PAGE_TITLE = "Site Title"
FAVICON_URL = https://filedn.com/lDsr08WnANmQTUJg2h6Jg2Q/Logos/Irregular%20Chat-Tech.png
# config
BASE_DOMAIN =domain.tld
PORT = 8501

# Authentik
Authentik_API_URL = https://sso.domain.tld/api/v3
# Secrets
# See documentation for user and api token https://docs.goauthentik.io/developer-docs/api/reference/core-users-create 
AUTHENTIK_API_TOKEN = your_api_token_here
#The group id you want to add default users to be in. Select group and see id in url.
MAIN_GROUP_ID = GROUP_ID
# authentik flow id. Export flow to see the id. 
FLOW_ID = FLOW_ID_HERE 
# authentik flow id. Export flow to see the id.
INVITE_FLOW_ID = INVITE_FLOW_ID_HERE 
# The label for the invite flow
INVITE_LABEL = INVITE_LABEL_HERE 

LOGIN_REQUIRED = False

# Authentik OpenID Connect (OIDC) Configuration
# The client ID for your OIDC application in Authentik
OIDC_CLIENT_ID = community_dashboard
# The client secret for your OIDC application in Authentik
OIDC_CLIENT_SECRET = your_client_secret_here
# The OIDC authorization endpoint
OIDC_AUTHORIZATION_ENDPOINT = https://sso.domain.tld/application/o/authorize/
# The OIDC token endpoint
OIDC_TOKEN_ENDPOINT = https://sso.domain.tld/application/o/token/
# The OIDC userinfo endpoint
OIDC_USERINFO_ENDPOINT = https://sso.domain.tld/application/o/userinfo/
# The OIDC end session endpoint
OIDC_END_SESSION_ENDPOINT = https://sso.domain.tld/application/o/end-session/
# The OIDC scopes to request (comma-separated)
OIDC_SCOPES = openid,profile,email
# The OIDC redirect URI for your application
OIDC_REDIRECT_URI = https://dashboard.domain.tld/auth/callback

# Admin configuration
# Comma-separated list of usernames that should have admin privileges
# Default admin user is 'adminuser' with password 'Admin_Password123!'
# IMPORTANT: Change this password after first login for security
ADMIN_USERNAMES = adminuser,admin1,admin2

# Default admin user credentials (used for first-time setup)
DEFAULT_ADMIN_USERNAME = adminuser
DEFAULT_ADMIN_PASSWORD = Admin_Password123!

# Local DB 
POSTGRES_PASSWORD =  password_for_db
POSTGRES_USER = dashboarduser
POSTGRES_DB = dashboarddb
# POSTGRES_PORT is used for external connections from the host machine
# In Docker, this is the external port mapping. Change this if 5436 conflicts with other services.
# Note: Inside Docker, PostgreSQL always uses port 5432 regardless of this setting.
POSTGRES_PORT = 5436 
# Internal Docker connection URL always uses port 5432
DATABASE_URL = postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}

# OPENAI API KEY used for gpt_call.py
OPENAI_ACTIVE = False
OPENAI_API_KEY = ""

# SMTP Email Server for sending emails
SMTP_ACTIVE = False
SMTP_SERVER = smtp.domain.com
SMTP_PORT = 587
SMTP_USER = username
SMTP_PASSWORD = password
SMTP_FROM = no-reply@domain.com
# The email address of the user who will be used to send the safety number change email
SMTP_BCC = email@domain.com

# List of Signal Groups that Users will be added to when they sign up based on their interest

# DISCOURSE API FOR POSTING TO DISCOURSE
DISCOURSE_ACTIVE = False
DISCOURSE_URL = https://discourse.domain.com/
DISCOURSE_API_KEY = your_api_key_here
DISCOURSE_API_USERNAME = your_username_here
DISCOURSE_CATEGORY_ID = 8
DISCOURSE_INTRO_TAG = "introductions"

## MATRIX ACCESS TOKEN FOR POSTING TO MATRIX using matrix-python-sdk
MATRIX_ACTIVE = False
MATRIX_URL = https://matrix.domain.com/
MATRIX_ACCESS_TOKEN = your_access_token_here
# Matrix room IDs for posting to specific rooms (format: !roomid:domain.com)
MATRIX_DEFAULT_ROOM_ID = !defaultroomid:domain.com
# Define multiple rooms if needed
MATRIX_WELCOME_ROOM_ID = !welcomeroom:domain.com
# Signal bridge bot command room ID - where you send commands to the Signal bridge bot
# This is NOT where you chat with Signal users, but where you send bot commands like "start-chat @signal_user"
# The bot will respond with the actual chat room ID for each Signal user
# Format: !roomid:domain.com (get this from your Signal bridge bot logs)
# Leave empty if you don't use Signal bridge integration
MATRIX_SIGNAL_BRIDGE_ROOM_ID = !signalbridgeroom:domain.com

# Matrix encryption is disabled for simplicity
# Message history is not available, but sending messages works
# Matrix rooms configuration (format: name|category|room_id on separate lines or separated by semicolons)
# MATRIX_ROOM_IDS_NAME_CATEGORY = Room Name|Room Category1, Room Category2, Room Category5|!roomid:domain.com;Room Name|Room Category1, Room Category3|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com;Room Name|Room Category|!roomid:domain.com
# Matrix bot/service account details
MATRIX_BOT_USERNAME = @botname:domain.com
MATRIX_BOT_DISPLAY_NAME = "Service Bot"

# Matrix cache configuration
# Minimum number of members a room must have to be synced (default: 5)
# Rooms with fewer members will be skipped during sync to improve performance
MATRIX_MIN_ROOM_MEMBERS = 5

MATRIX_MESSAGE_NOTICE="NOREPLY: This message was sent from the admin dashboard"


# =============================================================================
# ROOM RECOMMENDATION CONFIGURATION
# =============================================================================
# Configure rooms for intelligent user recommendations based on interests.
# 
# STEP 1: Define your categories first (these help organize and match rooms)
# Format: CATEGORY_[NAME] = Display Name|Keywords for matching this category
# Keywords should be comma-separated terms users might enter as interests
#
# Example categories (customize for your community):
CATEGORY_TECHNOLOGY = Technology|tech,technology,programming,coding,software,development,computer,hardware,it,ai,artificial intelligence,machine learning,cybersecurity,security,hacking
CATEGORY_SOCIAL = Social & General|social,general,offtopic,off-topic,casual,chat,discussion,community,hangout
CATEGORY_HOBBIES = Hobbies & Interests|hobbies,interests,outdoor,nature,hiking,camping,adventure,sports,fitness,gaming,games,music,art,photography
CATEGORY_PROFESSIONAL = Professional|business,career,professional,work,job,entrepreneurship,startup,finance,investing,networking,industry
CATEGORY_EDUCATION = Education & Learning|education,learning,study,training,certification,course,tutorial,academic,research,science
CATEGORY_LOCATION = Location-Based|location,local,regional,city,state,country,meetup,nearby,area

# STEP 2: Define your rooms using the categories above
# Format: ROOM_[UNIQUE_ID] = Room Name|Category Name(s)|Description|Matrix Room ID
# - Use category names from STEP 1 (can use multiple categories separated by commas)
# - Matrix Room ID format: !roomid:yourdomain.com
# - Customize these examples for your actual rooms:

# Technology rooms
ROOM_TECH_GENERAL = General Tech Chat|Technology|General technology discussions for all skill levels|!tech-general:yourdomain.com
ROOM_TECH_AI = AI & Machine Learning|Technology|Artificial intelligence and machine learning discussions|!ai-ml:yourdomain.com
ROOM_TECH_SECURITY = Cybersecurity|Technology|Information security, ethical hacking, and cybersecurity topics|!security:yourdomain.com

# Social rooms  
ROOM_SOCIAL_GENERAL = General Chat|Social & General|Off-topic discussions and general community chat|!general:yourdomain.com
ROOM_SOCIAL_INTRODUCTIONS = Introductions|Social & General|New member introductions and welcomes|!introductions:yourdomain.com

# Hobby rooms
ROOM_HOBBIES_OUTDOOR = Outdoor Activities|Hobbies & Interests|Hiking, camping, and outdoor adventures|!outdoor:yourdomain.com
ROOM_HOBBIES_GAMING = Gaming|Hobbies & Interests|Video games, board games, and gaming discussions|!gaming:yourdomain.com

# Professional rooms
ROOM_PROFESSIONAL_BUSINESS = Business & Career|Professional|Business discussions, career advice, and networking|!business:yourdomain.com

# Educational rooms
ROOM_EDUCATION_GENERAL = Learning & Development|Education & Learning|Educational resources, courses, and skill development|!learning:yourdomain.com

# Location rooms (customize for your regions)
ROOM_LOCATION_LOCAL = Local Meetups|Location-Based|Local community meetups and events|!local:yourdomain.com

# STEP 3: Configure recommendation behavior
ROOM_RECOMMENDATIONS_ENABLED = True
MAX_ROOM_RECOMMENDATIONS = 5
MIN_RECOMMENDATION_SCORE = 0.3

# STEP 4: Add custom keyword expansions (optional)
# Format: keyword:synonym1,synonym2,synonym3|keyword2:synonym1,synonym2
# This helps match user interests to rooms more effectively
INTEREST_KEYWORD_EXPANSIONS = ai:artificial intelligence,machine learning,ml,deep learning,neural networks|cyber:cybersecurity,security,infosec,hacking,pentest|dev:development,programming,coding,software|business:entrepreneurship,startup,career,professional,finance
